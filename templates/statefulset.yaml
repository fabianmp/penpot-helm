apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "penpot.fullname" . }}
  labels:
    {{- include "penpot.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "penpot.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "penpot.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/env-secret: {{ include (print $.Template.BasePath "/secret-env.yaml") . | sha256sum }}
        checksum/env-configmap: {{ include (print $.Template.BasePath "/configmap-env.yaml") . | sha256sum }}
        checksum/nginx: {{ include (print $.Template.BasePath "/configmap-nginx.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "penpot.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "penpot.serviceAccountName" . }}
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "penpot.fullname" . }}-env
            - secretRef:
                name: {{ include "penpot.fullname" . }}-env
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /opt/data
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "penpot.fullname" . }}-env
            - secretRef:
                name: {{ include "penpot.fullname" . }}-env
          volumeMounts:
            - name: nginx
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /opt/data
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
        - name: exporter
          image: "{{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.exporter.image.pullPolicy }}
          env:
            - name: PENPOT_PUBLIC_URI
              value: http://localhost:80
            - name: PENPOT_REDIS_URI
              value: redis://{{ .Release.Name }}-redis-master/0
          resources:
            {{- toYaml .Values.exporter.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: nginx
          configMap:
            name: {{ include "penpot.fullname" . }}-nginx
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        storageClassName: {{ .Values.persistence.storageClass }}
  {{- end }}
